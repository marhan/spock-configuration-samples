/*#########################################################################*/
/*                         Semantic Versioning                             */
/*#########################################################################*/

plugins {
	id 'pl.allegro.tech.build.axion-release' version '1.9.0'
}

scmVersion {
	checks {
		uncommittedChanges = false
		aheadOfRemote = false
		snapshotDependencies = false
	}
	tag {
		prefix = ''
		initialVersion = { config, position -> '1.0.0' }
	}
	versionIncrementer 'incrementPatch'
	versionCreator 'versionWithBranch'
	branchVersionIncrementer = [
		'release*': 'incrementMinor'
	]
}

/*#########################################################################*/
/*                                GENERAL                                  */
/*#########################################################################*/
allprojects {
	group = "de.marhan"
	version = scmVersion.version

	ext {
		maxTestThreads = 1
	}

	buildscript {
		repositories {
			mavenCentral()
		}
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
	}


}

subprojects {

	ext {
		testEnvironment = findProperty('environment') ? findProperty('environment') : 'dev'
	}

/*#########################################################################*/
/*                                 PLUGINS                                 */
/*#########################################################################*/

	apply plugin: "idea"
	apply plugin: "java"
	apply plugin: 'groovy'

/*#########################################################################*/
/*                                Compiler                                 */
/*#########################################################################*/

	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'

	/*#########################################################################*/
	/*                                PROPERTIES                               */
	/*#########################################################################*/

	test.doFirst {
		def availableEnvironments = ['dev', 'preview', 'live']

		if (!availableEnvironments.contains(testEnvironment)) {
			def message = "Target environment '${testEnvironment}' not supported. Please use one of the following: " + availableEnvironments.join(", ")
			throw new TaskExecutionException(setUpEnvironmentConfiguration, new ResourceException(message))
		}

		println ""
		println "#-----------------------------------------#"
		println " Gradle version ${gradle.gradleVersion}"
		println " Subproject: ${project.name} v${version}"
		println " Target environment: ${testEnvironment}"
		println "#-----------------------------------------#"
		println ""

		systemProperty 'environment', "${testEnvironment}"
		systemProperty 'spring.profiles.active', "${testEnvironment}"
		systemProperty 'com.athaydes.spockframework.report.projectName', "${project.name} against [${testEnvironment}]"
		systemProperty 'com.athaydes.spockframework.report.projectVersion', "${version}"
		systemProperty 'com.athaydes.spockframework.report.outputDir', "build/spock-reports-${testEnvironment}"
		systemProperty 'com.athaydes.spockframework.report.showCodeBlocks', "true"
	}


}

/*#########################################################################*/
/*                                 GRADLE                                  */
/*#########################################################################*/

task wrapper(type: Wrapper) { gradleVersion = '4.10.2' }

